// https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1

import java.io.*;
import java.util.*;


 // } Driver Code Ends
 
class Solution
{
    public static void sort012(int a[], int n)
    {
        int low=0, mid=0, high=n-1;
        
        while(mid<=high){
            if(a[mid]==0){
                swap(a,low,mid);
                low++;mid++;
                
            }
            
            else if(a[mid]==1){
                mid++;
            }
            
            else if(a[mid]==2){
                swap(a,high,mid);
                high--;
            }
        }
    }
    
    public static void swap(int a[], int i, int j){
        int temp=a[i];
        a[i]=a[j];
        a[j]=temp;
    }
}

// { Driver Code Starts.

class GFG {
    
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
        while(t-->0){
            int n = Integer.parseInt(br.readLine().trim());
            int arr[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for(int i=0; i<n; i++){
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            Solution ob=new Solution();
            ob.sort012(arr, n);
            StringBuffer str = new StringBuffer();
            for(int i=0; i<n; i++){
                str.append(arr[i]+" ");
            }
            System.out.println(str);
        }
    }
}

  // } Driver Code Ends
